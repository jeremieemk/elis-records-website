{"version":3,"file":"static/webpack/static/development/pages/index.js.89c09f8f27166dfa2f51.hot-update.js","sources":["webpack:///./components/AudioPlayer.js","webpack:///./components/ReleaseEntry.js","webpack:///./components/TracklistAndPlayer.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport PlayButton from \"./PlayButton\";\nimport ProgressBar from \"./ProgressBar\";\nimport VolumeSlider from \"./VolumeSlider\";\n\nfunction AudioPlayer(props) {\n  const [progression, setProgression] = useState(0);\n  const audio = useRef();\n  const updateProgress = () =>\n    setProgression((audio.current.currentTime / audio.current.duration) * 100);\n  useEffect(() => {\n    props.playingStatus ? audio.current.play() : audio.current.pause();\n  }, [props.playingStatus]);\n\n  // allows launching track when clicking on the tracklist\n  useEffect(() => {\n    props.setPlayingStatus(true);\n    audio.current.currentTime = 0;\n    audio.current.play();\n  }, [props.launchPlay, props.track]);\n\n  return (\n    <div>\n      <div className=\"audio-player-container\">\n        <PlayButton\n          handlePlayButtonClick={props.handlePlayButtonClick}\n          playingStatus={props.playingStatus}\n        />\n        <ProgressBar audio={audio.current} progression={progression} />\n\n        <audio\n          ref={audio}\n          onTimeUpdate={updateProgress}\n          src={props.track.url}\n        />\n      </div>\n      <VolumeSlider audio={audio.current} />\n      <style jsx>{`\n        .audio-player-container {\n          z-index: 5;\n          position: relative;\n          display: flex;\n          width: 100%;\n          height: 2rem;\n          animation: fadeIn 1s;\n              animation-fill-mode: forwards;\n            }\n            @keyframes fadeIn {\n              from {\n                opacity: 0;\n              }\n\n              to {\n                opacity: 1;\n              }\n            }\n        }\n      `}</style>\n    </div>\n  );\n}\n\nexport default AudioPlayer;\n","import { useState } from \"react\";\nimport TracklistAndPlayer from \"./TracklistAndPlayer\";\n\nfunction ReleaseEntry(props) {\n  const [playerDisplayId, setPlayerDisplayId] = useState(null);\n  const [showMoreDetails, setShowMoreDetails] = useState(true);\n\n  function showPlayer(event) {\n    setPlayerDisplayId(event.target.getAttribute(\"data-tag\"));\n    setShowMoreDetails(true);\n  }\n  function renderSection(section) {\n    return (\n      <div className=\"section\">\n        {section[0] && section.map(paragraph => <p>{paragraph.text}</p>)}\n      </div>\n    );\n  }\n  props.releases && console.log(props.releases);\n  function hideMoreDetails(e) {\n    setShowMoreDetails(false);\n  }\n\n  return (\n    props.releases &&\n    props.releases.map((release, index) => {\n      let tracklist = Object.values(release.data.tracks[0]);\n      return (\n        <div>\n          <div className=\"release-entry-wrapper\">\n            <div onClick={showPlayer}>\n              <img\n                className=\"release-cover\"\n                key={`cover${index}`}\n                src={release.data.cover.url}\n                alt=\"release-cover\"\n                data-tag={index}\n              />\n              <div className=\"release-details\">\n                <div\n                  key={`artist${index}`}\n                  className=\"artist-name\"\n                  data-tag={index}\n                >\n                  {release.data.artist[0].text}\n                </div>\n\n                <div\n                  key={`title${index}`}\n                  className=\"release-name\"\n                  data-tag={index}\n                >\n                  <img\n                    className=\"mini-play\"\n                    src=\"/img/play-song.png\"\n                    alt=\"mini-play\"\n                    data-tag={index}\n                  />\n                  {release.data.title[0].text}\n                </div>\n              </div>\n            </div>\n            {parseInt(playerDisplayId) === index && (\n              <div>\n                {showMoreDetails && (\n                  <div className=\"more-info-about-release\">\n                    <img\n                      className=\"close-more-info-cross\"\n                      src=\"/img/cross.png\"\n                      alt=\"cross\"\n                      onClick={hideMoreDetails}\n                    />\n                    <div className=\"tracklist-details\">\n                      {renderSection(release.data.tracklist)}\n                    </div>\n                    <div className=\"buy-link\">\n                      <a href={release.data.buy.url} target=\"_blank\">\n                        BUY\n                      </a>\n                    </div>\n\n                    <div className=\"about-release\">\n                      {renderSection(release.data.about)}\n                    </div>\n\n                    <div className=\"credits\">\n                      {renderSection(release.data.credits)}\n                    </div>\n                  </div>\n                )}\n                <TracklistAndPlayer\n                  tracklist={tracklist}\n                  setPlayerDisplayId={setPlayerDisplayId}\n                />\n              </div>\n            )}\n          </div>\n          <style jsx>{`\n            .release-entry-wrapper {\n              z-index: -1;\n              padding-left: var(--global-margin);\n              padding-right: var(--global-margin);\n              font-family: var(--font1);\n              font-size: var(--standard-font-size);\n              text-transform: uppercase;\n            }\n\n            .release-cover {\n              cursor: pointer;\n              width: 100%;\n              transition: transform 0.5s;\n            }\n            .release-cover:hover {\n              transform: scale(1.005);\n            }\n\n            .release-details {\n              padding-top: 1rem;\n              padding-bottom: 1rem;\n              padding-left: 0.5rem;\n              padding-right: 0.5rem;\n              text-align: center;\n              letter-spacing: 0.05rem;\n              transition: opacity 0.3s;\n              transition: transform 0.5s;\n              cursor: pointer;\n            }\n            .release-details:hover {\n              opacity: 0.85;\n              transform: scale(1.01);\n            }\n            .mini-play {\n              width: 0.5rem;\n              margin-right: 0.7rem;\n            }\n            .artist-name,\n            .release-name {\n              padding-top: 0.5rem;\n              padding-bottom: 0.3rem;\n            }\n            .tracklist-details {\n              margin-bottom: 1rem;\n              padding-right: 0.5rem;\n            }\n            .buy-link {\n              margin-bottom: 1rem;\n              text-decoration: underline;\n            }\n            .close-more-info-cross {\n              width: 0.6rem;\n              position: absolute;\n              right: 0;\n              top: 0;\n              transition: transform 0.3s;\n              opacity: 0.7;\n              cursor: pointer;\n            }\n            .close-more-info-cross:hover {\n              width: 0.7rem;\n              opacity: 1;\n            }\n            .more-info-about-release {\n              text-transform: none;\n              margin-bottom: 4rem;\n              position: relative;\n              letter-spacing: 0.05rem;\n            }\n            .more-info-section-title {\n              margin-bottom: 1rem;\n              margin-top: 1rem;\n            }\n            .about-release {\n              margin-bottom: 2rem;\n            }\n\n            @media (min-width: 801px) {\n              .release-entry-wrapper {\n                font-size: var(--desktop-font-size);\n              }\n            }\n          `}</style>\n        </div>\n      );\n    })\n  );\n}\n\nexport default ReleaseEntry;\n","import { useState } from \"react\";\nimport AudioPlayer from \"./AudioPlayer\";\n\nfunction TracklistAndPlayer(props) {\n  const [selectedTrack, setSelectedTrack] = useState(0);\n  const [launchPlay, setLaunchPlay] = useState(false);\n  const [playingStatus, setPlayingStatus] = useState(true);\n  function stopMusic() {\n    setPlayingStatus(false);\n    props.setPlayerDisplayId(null);\n  }\n  function startTrack(event) {\n    setSelectedTrack(event.target.getAttribute(\"data-tag\"));\n    setLaunchPlay(true);\n  }\n  function handlePlayButtonClick() {\n    setPlayingStatus(!playingStatus);\n  }\n\n  return (\n    <div className=\"audio-player-container\">\n      <img\n        className=\"cross\"\n        src=\"/img/cross.png\"\n        alt=\"cross\"\n        onClick={stopMusic}\n      />\n      <div className=\"tracklist-container\">\n        {props.tracklist.map((track, index) => (\n          <div\n            className=\"tracklist-item\"\n            data-tag={index}\n            onClick={startTrack}\n            style={{\n              opacity: parseInt(selectedTrack) === index && 1\n            }}\n          >\n            {track.name && track.name.slice(0, -4)}\n          </div>\n        ))}\n      </div>\n      <AudioPlayer\n        track={props.tracklist[selectedTrack]}\n        launchPlay={launchPlay}\n        handlePlayButtonClick={handlePlayButtonClick}\n        playingStatus={playingStatus}\n        setPlayingStatus={setPlayingStatus}\n      />\n      <style jsx>{`\n        .audio-player-container {\n          cursor: pointer;\n          position: fixed;\n          bottom: 0;\n          left: 0;\n          background: white;\n          width: 100%;\n          z-index: 2;\n          padding-bottom: 1rem;\n          padding-top: 1rem;\n          border-top: 0.2px solid black;\n        }\n        .cross {\n          width: 0.5rem;\n          position: absolute;\n          right: 0.3rem;\n          top: 0.3rem;\n          transition: transform 0.3s;\n          opacity: 0.7;\n        }\n        .cross:hover {\n          transform: scale(1.2);\n          opacity: 1;\n        }\n        .tracklist-container {\n          padding-bottom: 0.5rem;\n          padding-left: 1rem;\n          padding-right: 1rem;\n        }\n        .tracklist-item {\n          padding-bottom: 0.5rem;\n          opacity: 0.5;\n        }\n      `}</style>\n    </div>\n  );\n}\n\nexport default TracklistAndPlayer;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AAAA;AAAA;AAsCA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9DA;AAAA;AAAA;AA2JA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC3LA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AADA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAcA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AArBA;AAAA;AAAA;AAiEA;AACA;AACA;;;;A","sourceRoot":""}