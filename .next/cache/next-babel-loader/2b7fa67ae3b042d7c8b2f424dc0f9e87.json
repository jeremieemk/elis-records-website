{"ast":null,"code":"var _jsxFileName = \"/Users/jeremie/web/33_elis/components/ProgressBar.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRef } from \"react\";\n\nfunction ProgressBar(props) {\n  let progression = props.audioCurrentTime / props.songLength * 100;\n  const progressBar = useRef();\n\n  function scrub(e) {\n    console.log(e.nativeEvent.offsetX);\n    console.log(progressBar.current.offsetWidth);\n    console.log(audio.duration); // const scrubTime = (e.offsetX / progression.offsetWidth) * audio.duration;\n    // audio.currentTime = scrubTime;\n  }\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.audioCurrentTime, __jsx(\"div\", {\n    className: \"progress-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    ref: progressBar,\n    className: \"range\",\n    style: {\n      width: `${progression}%`\n    },\n    onClick: e => scrub(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })), style);\n}\n\nconst style = __jsx(\"style\", {\n  jsx: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, `\n    .progress-bar {\n      width: 80%;\n      height: 35px;\n      border: 2px solid #666;\n    }\n    .range {\n      background: limegreen;\n      height: 100%;\n      transition: width 0.3s ease-in;\n    }\n  `);\n\nexport default ProgressBar;","map":{"version":3,"sources":["/Users/jeremie/web/33_elis/components/ProgressBar.js"],"names":["useRef","ProgressBar","props","progression","audioCurrentTime","songLength","progressBar","scrub","e","console","log","nativeEvent","offsetX","current","offsetWidth","audio","duration","width","style"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAIC,WAAW,GAAID,KAAK,CAACE,gBAAN,GAAyBF,KAAK,CAACG,UAAhC,GAA8C,GAAhE;AACA,QAAMC,WAAW,GAAGN,MAAM,EAA1B;;AACA,WAASO,KAAT,CAAeC,CAAf,EAAkB;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,WAAF,CAAcC,OAA1B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAW,CAACO,OAAZ,CAAoBC,WAAhC;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACC,QAAlB,EAHgB,CAIhB;AACA;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,KAAK,CAACE,gBADT,EAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEE,WADP;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,KAAK,EAAE;AAAEW,MAAAA,KAAK,EAAG,GAAEd,WAAY;AAAxB,KAHT;AAIE,IAAA,OAAO,EAAEK,CAAC,IAAID,KAAK,CAACC,CAAD,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAWGU,KAXH,CADF;AAeD;;AAED,MAAMA,KAAK,GACT;AAAO,EAAA,GAAG,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAa;;;;;;;;;;;GAAb,CADF;;AAeA,eAAejB,WAAf","sourcesContent":["import { useRef } from \"react\";\n\nfunction ProgressBar(props) {\n  let progression = (props.audioCurrentTime / props.songLength) * 100;\n  const progressBar = useRef();\n  function scrub(e) {\n    console.log(e.nativeEvent.offsetX);\n    console.log(progressBar.current.offsetWidth);\n    console.log(audio.duration);\n    // const scrubTime = (e.offsetX / progression.offsetWidth) * audio.duration;\n    // audio.currentTime = scrubTime;\n  }\n\n  return (\n    <div>\n      {props.audioCurrentTime}\n      <div className=\"progress-bar\">\n        <div\n          ref={progressBar}\n          className=\"range\"\n          style={{ width: `${progression}%` }}\n          onClick={e => scrub(e)}\n        />\n      </div>\n\n      {style}\n    </div>\n  );\n}\n\nconst style = (\n  <style jsx>{`\n    .progress-bar {\n      width: 80%;\n      height: 35px;\n      border: 2px solid #666;\n    }\n    .range {\n      background: limegreen;\n      height: 100%;\n      transition: width 0.3s ease-in;\n    }\n  `}</style>\n);\n\nexport default ProgressBar;\n"]},"metadata":{},"sourceType":"module"}