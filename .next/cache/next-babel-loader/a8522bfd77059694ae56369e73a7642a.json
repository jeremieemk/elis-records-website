{"ast":null,"code":"var _jsxFileName = \"/Users/jeremie/web/33_elis/components/AudioPlayer.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef, useEffect } from \"react\";\nimport PlayButton from \"./PlayButton\";\nimport ProgressBar from \"./ProgressBar\";\nimport VolumeSlider from \"./VolumeSlider\";\n\nfunction AudioPlayer(props) {\n  const {\n    0: progression,\n    1: setProgression\n  } = useState(0);\n  const {\n    0: playingStatus,\n    1: setPlayingStatus\n  } = useState(true);\n  const audio = useRef();\n\n  const updateProgress = () => {\n    setProgression(audio.current.currentTime / audio.current.duration * 100);\n  };\n\n  const handlePlayButtonClick = () => {\n    setPlayingStatus(!playingStatus);\n  };\n\n  useEffect(() => {\n    if (playingStatus) {\n      audio.current.play();\n    } else {\n      audio.current.pause();\n    }\n  }, [playingStatus]); // allows changing track or rewinding when clicking on the tracklist\n\n  useEffect(() => {\n    setPlayingStatus(true);\n    audio.current.currentTime = 0;\n    audio.current.play(); // !props.launchPlay && audio.current.pause();\n  }, [props.launchPlay, props.track]);\n  return __jsx(\"div\", {\n    className: \"jsx-2643005314\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-2643005314\" + \" \" + \"audio-player-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(PlayButton, {\n    handlePlayButtonClick: handlePlayButtonClick,\n    playingStatus: playingStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), __jsx(ProgressBar, {\n    audio: audio.current,\n    progression: progression,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(\"audio\", {\n    ref: audio,\n    onTimeUpdate: updateProgress,\n    src: props.track.url,\n    className: \"jsx-2643005314\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), __jsx(VolumeSlider, {\n    audio: audio.current,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(_JSXStyle, {\n    id: \"2643005314\",\n    __self: this\n  }, \".audio-player-container.jsx-2643005314{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%;height:2rem;}@media (min-width:801px){.audio-player-container.jsx-2643005314{width:70%;}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWllL3dlYi8zM19lbGlzL2NvbXBvbmVudHMvQXVkaW9QbGF5ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0NrQixBQUd3QixBQU1ELFVBQ1osZ0VBTlcsV0FDQyxZQUNkIiwiZmlsZSI6Ii9Vc2Vycy9qZXJlbWllL3dlYi8zM19lbGlzL2NvbXBvbmVudHMvQXVkaW9QbGF5ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQbGF5QnV0dG9uIGZyb20gXCIuL1BsYXlCdXR0b25cIjtcbmltcG9ydCBQcm9ncmVzc0JhciBmcm9tIFwiLi9Qcm9ncmVzc0JhclwiO1xuaW1wb3J0IFZvbHVtZVNsaWRlciBmcm9tIFwiLi9Wb2x1bWVTbGlkZXJcIjtcblxuZnVuY3Rpb24gQXVkaW9QbGF5ZXIocHJvcHMpIHtcbiAgY29uc3QgW3Byb2dyZXNzaW9uLCBzZXRQcm9ncmVzc2lvbl0gPSB1c2VTdGF0ZSgwKTtcbiAgY29uc3QgW3BsYXlpbmdTdGF0dXMsIHNldFBsYXlpbmdTdGF0dXNdID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IGF1ZGlvID0gdXNlUmVmKCk7XG4gIGNvbnN0IHVwZGF0ZVByb2dyZXNzID0gKCkgPT4ge1xuICAgIHNldFByb2dyZXNzaW9uKChhdWRpby5jdXJyZW50LmN1cnJlbnRUaW1lIC8gYXVkaW8uY3VycmVudC5kdXJhdGlvbikgKiAxMDApO1xuICB9O1xuICBjb25zdCBoYW5kbGVQbGF5QnV0dG9uQ2xpY2sgPSAoKSA9PiB7XG4gICAgc2V0UGxheWluZ1N0YXR1cyghcGxheWluZ1N0YXR1cyk7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAocGxheWluZ1N0YXR1cykge1xuICAgICAgYXVkaW8uY3VycmVudC5wbGF5KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGF1ZGlvLmN1cnJlbnQucGF1c2UoKTtcbiAgICB9XG4gIH0sIFtwbGF5aW5nU3RhdHVzXSk7XG5cbiAgLy8gYWxsb3dzIGNoYW5naW5nIHRyYWNrIG9yIHJld2luZGluZyB3aGVuIGNsaWNraW5nIG9uIHRoZSB0cmFja2xpc3RcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRQbGF5aW5nU3RhdHVzKHRydWUpO1xuICAgIGF1ZGlvLmN1cnJlbnQuY3VycmVudFRpbWUgPSAwO1xuICAgIGF1ZGlvLmN1cnJlbnQucGxheSgpO1xuICAgIC8vICFwcm9wcy5sYXVuY2hQbGF5ICYmIGF1ZGlvLmN1cnJlbnQucGF1c2UoKTtcbiAgfSwgW3Byb3BzLmxhdW5jaFBsYXksIHByb3BzLnRyYWNrXSk7XG4gIHJldHVybiAoXG4gICAgPGRpdj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYXVkaW8tcGxheWVyLWNvbnRhaW5lclwiPlxuICAgICAgICA8UGxheUJ1dHRvblxuICAgICAgICAgIGhhbmRsZVBsYXlCdXR0b25DbGljaz17aGFuZGxlUGxheUJ1dHRvbkNsaWNrfVxuICAgICAgICAgIHBsYXlpbmdTdGF0dXM9e3BsYXlpbmdTdGF0dXN9XG4gICAgICAgIC8+XG4gICAgICAgIDxQcm9ncmVzc0JhciBhdWRpbz17YXVkaW8uY3VycmVudH0gcHJvZ3Jlc3Npb249e3Byb2dyZXNzaW9ufSAvPlxuXG4gICAgICAgIDxhdWRpb1xuICAgICAgICAgIHJlZj17YXVkaW99XG4gICAgICAgICAgb25UaW1lVXBkYXRlPXt1cGRhdGVQcm9ncmVzc31cbiAgICAgICAgICBzcmM9e3Byb3BzLnRyYWNrLnVybH1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPFZvbHVtZVNsaWRlciBhdWRpbz17YXVkaW8uY3VycmVudH0gLz5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLmF1ZGlvLXBsYXllci1jb250YWluZXIge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgaGVpZ2h0OiAycmVtO1xuICAgICAgICB9XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA4MDFweCkge1xuICAgICAgICAgIC5hdWRpby1wbGF5ZXItY29udGFpbmVyIHtcbiAgICAgICAgICAgIHdpZHRoOiA3MCU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEF1ZGlvUGxheWVyO1xuIl19 */\\n/*@ sourceURL=/Users/jeremie/web/33_elis/components/AudioPlayer.js */\"));\n}\n\nexport default AudioPlayer;","map":{"version":3,"sources":["/Users/jeremie/web/33_elis/components/AudioPlayer.js"],"names":["useState","useRef","useEffect","PlayButton","ProgressBar","VolumeSlider","AudioPlayer","props","progression","setProgression","playingStatus","setPlayingStatus","audio","updateProgress","current","currentTime","duration","handlePlayButtonClick","play","pause","launchPlay","track","url"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCT,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM;AAAA,OAACU,aAAD;AAAA,OAAgBC;AAAhB,MAAoCX,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAMY,KAAK,GAAGX,MAAM,EAApB;;AACA,QAAMY,cAAc,GAAG,MAAM;AAC3BJ,IAAAA,cAAc,CAAEG,KAAK,CAACE,OAAN,CAAcC,WAAd,GAA4BH,KAAK,CAACE,OAAN,CAAcE,QAA3C,GAAuD,GAAxD,CAAd;AACD,GAFD;;AAGA,QAAMC,qBAAqB,GAAG,MAAM;AAClCN,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD,GAFD;;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,aAAJ,EAAmB;AACjBE,MAAAA,KAAK,CAACE,OAAN,CAAcI,IAAd;AACD,KAFD,MAEO;AACLN,MAAAA,KAAK,CAACE,OAAN,CAAcK,KAAd;AACD;AACF,GANQ,EAMN,CAACT,aAAD,CANM,CAAT,CAX0B,CAmB1B;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAC,IAAAA,KAAK,CAACE,OAAN,CAAcC,WAAd,GAA4B,CAA5B;AACAH,IAAAA,KAAK,CAACE,OAAN,CAAcI,IAAd,GAHc,CAId;AACD,GALQ,EAKN,CAACX,KAAK,CAACa,UAAP,EAAmBb,KAAK,CAACc,KAAzB,CALM,CAAT;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,qBAAqB,EAAEJ,qBADzB;AAEE,IAAA,aAAa,EAAEP,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEE,KAAK,CAACE,OAA1B;AAAmC,IAAA,WAAW,EAAEN,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAOE;AACE,IAAA,GAAG,EAAEI,KADP;AAEE,IAAA,YAAY,EAAEC,cAFhB;AAGE,IAAA,GAAG,EAAEN,KAAK,CAACc,KAAN,CAAYC,GAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAcE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEV,KAAK,CAACE,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF;AAAA;AAAA;AAAA,0/FADF;AA8BD;;AAED,eAAeR,WAAf","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport PlayButton from \"./PlayButton\";\nimport ProgressBar from \"./ProgressBar\";\nimport VolumeSlider from \"./VolumeSlider\";\n\nfunction AudioPlayer(props) {\n  const [progression, setProgression] = useState(0);\n  const [playingStatus, setPlayingStatus] = useState(true);\n  const audio = useRef();\n  const updateProgress = () => {\n    setProgression((audio.current.currentTime / audio.current.duration) * 100);\n  };\n  const handlePlayButtonClick = () => {\n    setPlayingStatus(!playingStatus);\n  };\n\n  useEffect(() => {\n    if (playingStatus) {\n      audio.current.play();\n    } else {\n      audio.current.pause();\n    }\n  }, [playingStatus]);\n\n  // allows changing track or rewinding when clicking on the tracklist\n  useEffect(() => {\n    setPlayingStatus(true);\n    audio.current.currentTime = 0;\n    audio.current.play();\n    // !props.launchPlay && audio.current.pause();\n  }, [props.launchPlay, props.track]);\n  return (\n    <div>\n      <div className=\"audio-player-container\">\n        <PlayButton\n          handlePlayButtonClick={handlePlayButtonClick}\n          playingStatus={playingStatus}\n        />\n        <ProgressBar audio={audio.current} progression={progression} />\n\n        <audio\n          ref={audio}\n          onTimeUpdate={updateProgress}\n          src={props.track.url}\n        />\n      </div>\n      <VolumeSlider audio={audio.current} />\n      <style jsx>{`\n        .audio-player-container {\n          display: flex;\n          width: 100%;\n          height: 2rem;\n        }\n        @media (min-width: 801px) {\n          .audio-player-container {\n            width: 70%;\n          }\n        }\n      `}</style>\n    </div>\n  );\n}\n\nexport default AudioPlayer;\n"]},"metadata":{},"sourceType":"module"}