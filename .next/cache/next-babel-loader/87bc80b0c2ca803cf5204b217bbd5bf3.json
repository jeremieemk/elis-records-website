{"ast":null,"code":"import _readOnlyError from \"@babel/runtime-corejs2/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"/Users/jeremie/web/33_elis/pages/release/[releaseName]/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\n\nfunction Release(props) {\n  console.log(props.releases);\n  var router = useRouter();\n  var releaseName = router.query.releaseName;\n  var selectedRelease = {};\n  props.releases && props.releases.map(function (release) {\n    return release.slugs.includes(releaseName) && (selectedRelease = (_readOnlyError(\"selectedRelease\"), release));\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Release: \", releaseName));\n}\n\nexport default Release;","map":{"version":3,"sources":["/Users/jeremie/web/33_elis/pages/release/[releaseName]/index.js"],"names":["useRouter","Release","props","console","log","releases","router","releaseName","query","selectedRelease","map","release","slugs","includes"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB;AACA,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AAFsB,MAGdO,WAHc,GAGED,MAAM,CAACE,KAHT,CAGdD,WAHc;AAItB,MAAME,eAAe,GAAG,EAAxB;AACAP,EAAAA,KAAK,CAACG,QAAN,IACEH,KAAK,CAACG,QAAN,CAAeK,GAAf,CACE,UAAAC,OAAO;AAAA,WACLA,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuBN,WAAvB,MAAwCE,eAAe,uCAAGE,OAAH,CAAvD,CADK;AAAA,GADT,CADF;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcJ,WAAd,CADF,CADF;AAKD;;AAED,eAAeN,OAAf","sourcesContent":["import { useRouter } from \"next/router\";\n\nfunction Release(props) {\n  console.log(props.releases);\n  const router = useRouter();\n  const { releaseName } = router.query;\n  const selectedRelease = {};\n  props.releases &&\n    props.releases.map(\n      release =>\n        release.slugs.includes(releaseName) && (selectedRelease = release)\n    );\n  return (\n    <div>\n      <h1>Release: {releaseName}</h1>\n    </div>\n  );\n}\n\nexport default Release;\n"]},"metadata":{},"sourceType":"module"}