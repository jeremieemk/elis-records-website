{"ast":null,"code":"var _jsxFileName = \"/Users/jeremie/web/33_elis/components/AudioPlayer.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef, useEffect } from \"react\";\nimport PlayButton from \"./PlayButton\";\nimport ProgressBar from \"./ProgressBar\";\nimport VolumeSlider from \"./VolumeSlider\";\n\nfunction AudioPlayer(props) {\n  var _useState = useState(0),\n      progression = _useState[0],\n      setProgression = _useState[1];\n\n  var audio = useRef();\n\n  var updateProgress = function updateProgress() {\n    setProgression(audio.current.currentTime / audio.current.duration * 100);\n  };\n\n  useEffect(function () {\n    if (props.playingStatus) {\n      audio.current.play();\n    } else {\n      audio.current.pause();\n    }\n  }, [props.playingStatus]);\n  useEffect(function () {\n    setPlayingStatus(true);\n    audio.current.currentTime = 0;\n    audio.current.play();\n  }, [props.launchPlay, props.track]); // allows changing track or rewinding when clicking on the tracklist\n\n  return __jsx(\"div\", {\n    className: \"jsx-1775785678\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-1775785678\" + \" \" + \"audio-player-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(PlayButton, {\n    handlePlayButtonClick: props.handlePlayButtonClick,\n    playingStatus: props.playingStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), __jsx(ProgressBar, {\n    audio: audio.current,\n    progression: progression,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), __jsx(\"audio\", {\n    ref: audio,\n    onTimeUpdate: updateProgress,\n    src: props.track.url,\n    className: \"jsx-1775785678\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), __jsx(VolumeSlider, {\n    audio: audio.current,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), __jsx(_JSXStyle, {\n    id: \"1775785678\",\n    __self: this\n  }, \".audio-player-container.jsx-1775785678{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%;height:2rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWllL3dlYi8zM19lbGlzL2NvbXBvbmVudHMvQXVkaW9QbGF5ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMENrQixBQUd3QiwwRUFDRixXQUNDLFlBQ2QiLCJmaWxlIjoiL1VzZXJzL2plcmVtaWUvd2ViLzMzX2VsaXMvY29tcG9uZW50cy9BdWRpb1BsYXllci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlLCB1c2VSZWYsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFBsYXlCdXR0b24gZnJvbSBcIi4vUGxheUJ1dHRvblwiO1xuaW1wb3J0IFByb2dyZXNzQmFyIGZyb20gXCIuL1Byb2dyZXNzQmFyXCI7XG5pbXBvcnQgVm9sdW1lU2xpZGVyIGZyb20gXCIuL1ZvbHVtZVNsaWRlclwiO1xuXG5mdW5jdGlvbiBBdWRpb1BsYXllcihwcm9wcykge1xuICBjb25zdCBbcHJvZ3Jlc3Npb24sIHNldFByb2dyZXNzaW9uXSA9IHVzZVN0YXRlKDApO1xuICBjb25zdCBhdWRpbyA9IHVzZVJlZigpO1xuICBjb25zdCB1cGRhdGVQcm9ncmVzcyA9ICgpID0+IHtcbiAgICBzZXRQcm9ncmVzc2lvbigoYXVkaW8uY3VycmVudC5jdXJyZW50VGltZSAvIGF1ZGlvLmN1cnJlbnQuZHVyYXRpb24pICogMTAwKTtcbiAgfTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAocHJvcHMucGxheWluZ1N0YXR1cykge1xuICAgICAgYXVkaW8uY3VycmVudC5wbGF5KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGF1ZGlvLmN1cnJlbnQucGF1c2UoKTtcbiAgICB9XG4gIH0sIFtwcm9wcy5wbGF5aW5nU3RhdHVzXSk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0UGxheWluZ1N0YXR1cyh0cnVlKTtcbiAgICBhdWRpby5jdXJyZW50LmN1cnJlbnRUaW1lID0gMDtcbiAgICBhdWRpby5jdXJyZW50LnBsYXkoKTtcbiAgfSwgW3Byb3BzLmxhdW5jaFBsYXksIHByb3BzLnRyYWNrXSk7XG5cbiAgLy8gYWxsb3dzIGNoYW5naW5nIHRyYWNrIG9yIHJld2luZGluZyB3aGVuIGNsaWNraW5nIG9uIHRoZSB0cmFja2xpc3RcblxuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImF1ZGlvLXBsYXllci1jb250YWluZXJcIj5cbiAgICAgICAgPFBsYXlCdXR0b25cbiAgICAgICAgICBoYW5kbGVQbGF5QnV0dG9uQ2xpY2s9e3Byb3BzLmhhbmRsZVBsYXlCdXR0b25DbGlja31cbiAgICAgICAgICBwbGF5aW5nU3RhdHVzPXtwcm9wcy5wbGF5aW5nU3RhdHVzfVxuICAgICAgICAvPlxuICAgICAgICA8UHJvZ3Jlc3NCYXIgYXVkaW89e2F1ZGlvLmN1cnJlbnR9IHByb2dyZXNzaW9uPXtwcm9ncmVzc2lvbn0gLz5cblxuICAgICAgICA8YXVkaW9cbiAgICAgICAgICByZWY9e2F1ZGlvfVxuICAgICAgICAgIG9uVGltZVVwZGF0ZT17dXBkYXRlUHJvZ3Jlc3N9XG4gICAgICAgICAgc3JjPXtwcm9wcy50cmFjay51cmx9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxWb2x1bWVTbGlkZXIgYXVkaW89e2F1ZGlvLmN1cnJlbnR9IC8+XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5hdWRpby1wbGF5ZXItY29udGFpbmVyIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIGhlaWdodDogMnJlbTtcbiAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEF1ZGlvUGxheWVyO1xuIl19 */\\n/*@ sourceURL=/Users/jeremie/web/33_elis/components/AudioPlayer.js */\"));\n}\n\nexport default AudioPlayer;","map":{"version":3,"sources":["/Users/jeremie/web/33_elis/components/AudioPlayer.js"],"names":["useState","useRef","useEffect","PlayButton","ProgressBar","VolumeSlider","AudioPlayer","props","progression","setProgression","audio","updateProgress","current","currentTime","duration","playingStatus","play","pause","setPlayingStatus","launchPlay","track","handlePlayButtonClick","url"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA,kBACYP,QAAQ,CAAC,CAAD,CADpB;AAAA,MACnBQ,WADmB;AAAA,MACNC,cADM;;AAE1B,MAAMC,KAAK,GAAGT,MAAM,EAApB;;AACA,MAAMU,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BF,IAAAA,cAAc,CAAEC,KAAK,CAACE,OAAN,CAAcC,WAAd,GAA4BH,KAAK,CAACE,OAAN,CAAcE,QAA3C,GAAuD,GAAxD,CAAd;AACD,GAFD;;AAGAZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIK,KAAK,CAACQ,aAAV,EAAyB;AACvBL,MAAAA,KAAK,CAACE,OAAN,CAAcI,IAAd;AACD,KAFD,MAEO;AACLN,MAAAA,KAAK,CAACE,OAAN,CAAcK,KAAd;AACD;AACF,GANQ,EAMN,CAACV,KAAK,CAACQ,aAAP,CANM,CAAT;AAOAb,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAR,IAAAA,KAAK,CAACE,OAAN,CAAcC,WAAd,GAA4B,CAA5B;AACAH,IAAAA,KAAK,CAACE,OAAN,CAAcI,IAAd;AACD,GAJQ,EAIN,CAACT,KAAK,CAACY,UAAP,EAAmBZ,KAAK,CAACa,KAAzB,CAJM,CAAT,CAb0B,CAmB1B;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,qBAAqB,EAAEb,KAAK,CAACc,qBAD/B;AAEE,IAAA,aAAa,EAAEd,KAAK,CAACQ,aAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEL,KAAK,CAACE,OAA1B;AAAmC,IAAA,WAAW,EAAEJ,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAOE;AACE,IAAA,GAAG,EAAEE,KADP;AAEE,IAAA,YAAY,EAAEC,cAFhB;AAGE,IAAA,GAAG,EAAEJ,KAAK,CAACa,KAAN,CAAYE,GAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAcE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEZ,KAAK,CAACE,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF;AAAA;AAAA;AAAA,kiFADF;AA0BD;;AAED,eAAeN,WAAf","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport PlayButton from \"./PlayButton\";\nimport ProgressBar from \"./ProgressBar\";\nimport VolumeSlider from \"./VolumeSlider\";\n\nfunction AudioPlayer(props) {\n  const [progression, setProgression] = useState(0);\n  const audio = useRef();\n  const updateProgress = () => {\n    setProgression((audio.current.currentTime / audio.current.duration) * 100);\n  };\n  useEffect(() => {\n    if (props.playingStatus) {\n      audio.current.play();\n    } else {\n      audio.current.pause();\n    }\n  }, [props.playingStatus]);\n  useEffect(() => {\n    setPlayingStatus(true);\n    audio.current.currentTime = 0;\n    audio.current.play();\n  }, [props.launchPlay, props.track]);\n\n  // allows changing track or rewinding when clicking on the tracklist\n\n  return (\n    <div>\n      <div className=\"audio-player-container\">\n        <PlayButton\n          handlePlayButtonClick={props.handlePlayButtonClick}\n          playingStatus={props.playingStatus}\n        />\n        <ProgressBar audio={audio.current} progression={progression} />\n\n        <audio\n          ref={audio}\n          onTimeUpdate={updateProgress}\n          src={props.track.url}\n        />\n      </div>\n      <VolumeSlider audio={audio.current} />\n      <style jsx>{`\n        .audio-player-container {\n          display: flex;\n          width: 100%;\n          height: 2rem;\n        }\n        }\n      `}</style>\n    </div>\n  );\n}\n\nexport default AudioPlayer;\n"]},"metadata":{},"sourceType":"module"}