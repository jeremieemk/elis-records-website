{"ast":null,"code":"var _jsxFileName = \"/Users/jeremie/web/33_elis/components/AudioPlayer.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef, useEffect } from \"react\";\nimport PlayButton from \"./PlayButton\";\nimport ProgressBar from \"./ProgressBar\";\n\nfunction AudioPlayer() {\n  var _useState = useState(false),\n      playingStatus = _useState[0],\n      setPlayingStatus = _useState[1];\n\n  var _useState2 = useState(audio.current.currentTime),\n      audioCurrentTime = _useState2[0],\n      setAudioCurrentTime = _useState2[1];\n\n  var audio = useRef(null);\n\n  var handlePlayButtonClick = function handlePlayButtonClick() {\n    setPlayingStatus(!playingStatus);\n  };\n\n  useEffect(function () {\n    playingStatus ? audio.current.play() : audio.current.pause();\n  }, [playingStatus]);\n  return __jsx(\"div\", {\n    className: \"audio-player-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(PlayButton, {\n    handlePlayButtonClick: handlePlayButtonClick,\n    playingStatus: playingStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), __jsx(ProgressBar, {\n    audio: audio.current,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), __jsx(\"audio\", {\n    ref: audio,\n    src: \"/music/0.mp3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), style);\n}\n\nvar style = __jsx(\"style\", {\n  jsx: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, \"\");\n\nexport default AudioPlayer;","map":{"version":3,"sources":["/Users/jeremie/web/33_elis/components/AudioPlayer.js"],"names":["useState","useRef","useEffect","PlayButton","ProgressBar","AudioPlayer","playingStatus","setPlayingStatus","audio","current","currentTime","audioCurrentTime","setAudioCurrentTime","handlePlayButtonClick","play","pause","style"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,WAAT,GAAuB;AAAA,kBACqBL,QAAQ,CAAC,KAAD,CAD7B;AAAA,MACdM,aADc;AAAA,MACCC,gBADD;;AAAA,mBAE2BP,QAAQ,CACtDQ,KAAK,CAACC,OAAN,CAAcC,WADwC,CAFnC;AAAA,MAEdC,gBAFc;AAAA,MAEIC,mBAFJ;;AAKrB,MAAMJ,KAAK,GAAGP,MAAM,CAAC,IAAD,CAApB;;AACA,MAAMY,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClCN,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD,GAFD;;AAGAJ,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,aAAa,GAAGE,KAAK,CAACC,OAAN,CAAcK,IAAd,EAAH,GAA0BN,KAAK,CAACC,OAAN,CAAcM,KAAd,EAAvC;AACD,GAFQ,EAEN,CAACT,aAAD,CAFM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,qBAAqB,EAAEO,qBADzB;AAEE,IAAA,aAAa,EAAEP,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEE,KAAK,CAACC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAO,IAAA,GAAG,EAAED,KAAZ;AAAmB,IAAA,GAAG,EAAE,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOGQ,KAPH,CADF;AAWD;;AAED,IAAMA,KAAK,GAAG;AAAO,EAAA,GAAG,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;;AAEA,eAAeX,WAAf","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport PlayButton from \"./PlayButton\";\nimport ProgressBar from \"./ProgressBar\";\n\nfunction AudioPlayer() {\n  const [playingStatus, setPlayingStatus] = useState(false);\n  const [audioCurrentTime, setAudioCurrentTime] = useState(\n    audio.current.currentTime\n  );\n  const audio = useRef(null);\n  const handlePlayButtonClick = () => {\n    setPlayingStatus(!playingStatus);\n  };\n  useEffect(() => {\n    playingStatus ? audio.current.play() : audio.current.pause();\n  }, [playingStatus]);\n\n  return (\n    <div className=\"audio-player-container\">\n      <PlayButton\n        handlePlayButtonClick={handlePlayButtonClick}\n        playingStatus={playingStatus}\n      />\n      <ProgressBar audio={audio.current} />\n      <audio ref={audio} src={\"/music/0.mp3\"} />\n      {style}\n    </div>\n  );\n}\n\nconst style = <style jsx>{``}</style>;\n\nexport default AudioPlayer;\n"]},"metadata":{},"sourceType":"module"}