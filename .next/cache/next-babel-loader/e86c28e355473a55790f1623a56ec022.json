{"ast":null,"code":"import AudioPlayer from \"./AudioPlayer\";\nimport { useEffect, useState } from \"react\";\n\nfunction ReleaseEntry(props) {\n  const {\n    0: playerDisplayId,\n    1: setPlayerDisplayId\n  } = useState(null);\n  const {\n    0: selectedTrack,\n    1: setSelectedTrack\n  } = useState(0);\n\n  function showPlayer(event) {\n    setPlayerDisplayId(event.target.getAttribute(\"data-tag\"));\n  }\n\n  function changeTrack(event) {\n    setSelectedTrack(event.target.getAttribute(\"data-tag\"));\n  }\n\n  console.log(props.releases.data);\n  return null; //   props.releases &&\n  //   props.releases.data.map(function(release, index) {\n  //     let tracklist = Object.values(release.tracks[0]);\n  //     return (\n  //       <div>\n  //         <div className=\"release-entry-wrapper\">\n  //           <img\n  //             className=\"release-cover\"\n  //             onClick={showPlayer}\n  //             key={`cover${index}`}\n  //             src={release.cover.url}\n  //             alt=\"release-cover\"\n  //             data-tag={index}\n  //           />\n  //           <div className=\"release-details\">\n  //             <div key={`artist${index}`} className=\"artist-name\">\n  //               {release.artist[0].text}\n  //             </div>\n  //             <div key={`title${index}`} className=\"release-name\">\n  //               {release.title[0].text}\n  //             </div>\n  //           </div>\n  //           {parseInt(playerDisplayId) === index && (\n  //             <div className=\"audio-player-container\">\n  //               {tracklist.map((track, index) => (\n  //                 <div data-tag={index} onClick={changeTrack}>\n  //                   {track.name.slice(0, -4)}\n  //                 </div>\n  //               ))}\n  //               <AudioPlayer track={tracklist[selectedTrack]} />\n  //             </div>\n  //           )}\n  //         </div>\n  //         <style jsx>{`\n  //           .release-entry-wrapper {\n  //           }\n  //           .release-cover {\n  //             width: 100%;\n  //           }\n  //           .release-details {\n  //           }\n  //           .artist-name {\n  //           }\n  //           .artist-name,\n  //           .release-name {\n  //           }\n  //           .audio-player-container {\n  //             position: fixed;\n  //             bottom: 0;\n  //             background: white;\n  //             padding: 1rem;\n  //             width: 100%;\n  //             z-index: 2;\n  //           }\n  //         `}</style>\n  //       </div>\n  //     );\n  //   })\n  // );\n}\n\nexport default ReleaseEntry;","map":{"version":3,"sources":["/Users/jeremie/web/33_elis/components/ReleaseEntry.js"],"names":["AudioPlayer","useEffect","useState","ReleaseEntry","props","playerDisplayId","setPlayerDisplayId","selectedTrack","setSelectedTrack","showPlayer","event","target","getAttribute","changeTrack","console","log","releases","data"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCJ,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM;AAAA,OAACK,aAAD;AAAA,OAAgBC;AAAhB,MAAoCN,QAAQ,CAAC,CAAD,CAAlD;;AACA,WAASO,UAAT,CAAoBC,KAApB,EAA2B;AACzBJ,IAAAA,kBAAkB,CAACI,KAAK,CAACC,MAAN,CAAaC,YAAb,CAA0B,UAA1B,CAAD,CAAlB;AACD;;AACD,WAASC,WAAT,CAAqBH,KAArB,EAA4B;AAC1BF,IAAAA,gBAAgB,CAACE,KAAK,CAACC,MAAN,CAAaC,YAAb,CAA0B,UAA1B,CAAD,CAAhB;AACD;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACY,QAAN,CAAeC,IAA3B;AACA,SAAO,IAAP,CAV2B,CAW3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,eAAed,YAAf","sourcesContent":["import AudioPlayer from \"./AudioPlayer\";\nimport { useEffect, useState } from \"react\";\n\nfunction ReleaseEntry(props) {\n  const [playerDisplayId, setPlayerDisplayId] = useState(null);\n  const [selectedTrack, setSelectedTrack] = useState(0);\n  function showPlayer(event) {\n    setPlayerDisplayId(event.target.getAttribute(\"data-tag\"));\n  }\n  function changeTrack(event) {\n    setSelectedTrack(event.target.getAttribute(\"data-tag\"));\n  }\n  console.log(props.releases.data);\n  return null;\n  //   props.releases &&\n  //   props.releases.data.map(function(release, index) {\n  //     let tracklist = Object.values(release.tracks[0]);\n  //     return (\n  //       <div>\n  //         <div className=\"release-entry-wrapper\">\n  //           <img\n  //             className=\"release-cover\"\n  //             onClick={showPlayer}\n  //             key={`cover${index}`}\n  //             src={release.cover.url}\n  //             alt=\"release-cover\"\n  //             data-tag={index}\n  //           />\n  //           <div className=\"release-details\">\n  //             <div key={`artist${index}`} className=\"artist-name\">\n  //               {release.artist[0].text}\n  //             </div>\n  //             <div key={`title${index}`} className=\"release-name\">\n  //               {release.title[0].text}\n  //             </div>\n  //           </div>\n  //           {parseInt(playerDisplayId) === index && (\n  //             <div className=\"audio-player-container\">\n  //               {tracklist.map((track, index) => (\n  //                 <div data-tag={index} onClick={changeTrack}>\n  //                   {track.name.slice(0, -4)}\n  //                 </div>\n  //               ))}\n  //               <AudioPlayer track={tracklist[selectedTrack]} />\n  //             </div>\n  //           )}\n  //         </div>\n  //         <style jsx>{`\n  //           .release-entry-wrapper {\n  //           }\n  //           .release-cover {\n  //             width: 100%;\n  //           }\n\n  //           .release-details {\n  //           }\n  //           .artist-name {\n  //           }\n  //           .artist-name,\n  //           .release-name {\n  //           }\n  //           .audio-player-container {\n  //             position: fixed;\n  //             bottom: 0;\n  //             background: white;\n  //             padding: 1rem;\n  //             width: 100%;\n  //             z-index: 2;\n  //           }\n  //         `}</style>\n  //       </div>\n  //     );\n  //   })\n  // );\n}\n\nexport default ReleaseEntry;\n"]},"metadata":{},"sourceType":"module"}