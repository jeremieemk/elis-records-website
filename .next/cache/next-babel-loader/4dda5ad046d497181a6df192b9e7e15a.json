{"ast":null,"code":"var _jsxFileName = \"/Users/jeremie/web/33_elis/components/AudioPlayer.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef, useEffect } from \"react\";\nimport PlayButton from \"./PlayButton\";\nimport ProgressBar from \"./ProgressBar\";\nimport VolumeSlider from \"./VolumeSlider\";\n\nfunction AudioPlayer(props) {\n  const {\n    0: progression,\n    1: setProgression\n  } = useState(0);\n  const {\n    0: playingStatus,\n    1: setPlayingStatus\n  } = useState(true);\n  const audio = useRef();\n\n  const updateProgress = () => {\n    setProgression(audio.current.currentTime / audio.current.duration * 100);\n  };\n\n  const handlePlayButtonClick = () => {\n    setPlayingStatus(!playingStatus);\n  };\n\n  useEffect(() => {\n    if (playingStatus) {\n      audio.current.play();\n    } else {\n      audio.current.pause();\n    }\n  }, [playingStatus]); // allows changing track or rewinding when clicking on the tracklist\n\n  useEffect(() => {\n    setPlayingStatus(true);\n    audio.current.currentTime = 0;\n    audio.current.play();\n  }, [props.launchPlay, props.track]);\n  return __jsx(\"div\", {\n    className: \"jsx-1775785678\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-1775785678\" + \" \" + \"audio-player-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(PlayButton, {\n    handlePlayButtonClick: handlePlayButtonClick,\n    playingStatus: playingStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), __jsx(ProgressBar, {\n    audio: audio.current,\n    progression: progression,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), __jsx(\"audio\", {\n    ref: audio,\n    onTimeUpdate: updateProgress,\n    src: props.track.url,\n    className: \"jsx-1775785678\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), __jsx(VolumeSlider, {\n    audio: audio.current,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(_JSXStyle, {\n    id: \"1775785678\",\n    __self: this\n  }, \".audio-player-container.jsx-1775785678{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%;height:2rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXJlbWllL3dlYi8zM19lbGlzL2NvbXBvbmVudHMvQXVkaW9QbGF5ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBOENrQixBQUd3QiwwRUFDRixXQUNDLFlBQ2QiLCJmaWxlIjoiL1VzZXJzL2plcmVtaWUvd2ViLzMzX2VsaXMvY29tcG9uZW50cy9BdWRpb1BsYXllci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlLCB1c2VSZWYsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFBsYXlCdXR0b24gZnJvbSBcIi4vUGxheUJ1dHRvblwiO1xuaW1wb3J0IFByb2dyZXNzQmFyIGZyb20gXCIuL1Byb2dyZXNzQmFyXCI7XG5pbXBvcnQgVm9sdW1lU2xpZGVyIGZyb20gXCIuL1ZvbHVtZVNsaWRlclwiO1xuXG5mdW5jdGlvbiBBdWRpb1BsYXllcihwcm9wcykge1xuICBjb25zdCBbcHJvZ3Jlc3Npb24sIHNldFByb2dyZXNzaW9uXSA9IHVzZVN0YXRlKDApO1xuICBjb25zdCBbcGxheWluZ1N0YXR1cywgc2V0UGxheWluZ1N0YXR1c10gPSB1c2VTdGF0ZSh0cnVlKTtcbiAgY29uc3QgYXVkaW8gPSB1c2VSZWYoKTtcbiAgY29uc3QgdXBkYXRlUHJvZ3Jlc3MgPSAoKSA9PiB7XG4gICAgc2V0UHJvZ3Jlc3Npb24oKGF1ZGlvLmN1cnJlbnQuY3VycmVudFRpbWUgLyBhdWRpby5jdXJyZW50LmR1cmF0aW9uKSAqIDEwMCk7XG4gIH07XG4gIGNvbnN0IGhhbmRsZVBsYXlCdXR0b25DbGljayA9ICgpID0+IHtcbiAgICBzZXRQbGF5aW5nU3RhdHVzKCFwbGF5aW5nU3RhdHVzKTtcbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChwbGF5aW5nU3RhdHVzKSB7XG4gICAgICBhdWRpby5jdXJyZW50LnBsYXkoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXVkaW8uY3VycmVudC5wYXVzZSgpO1xuICAgIH1cbiAgfSwgW3BsYXlpbmdTdGF0dXNdKTtcblxuICAvLyBhbGxvd3MgY2hhbmdpbmcgdHJhY2sgb3IgcmV3aW5kaW5nIHdoZW4gY2xpY2tpbmcgb24gdGhlIHRyYWNrbGlzdFxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldFBsYXlpbmdTdGF0dXModHJ1ZSk7XG4gICAgYXVkaW8uY3VycmVudC5jdXJyZW50VGltZSA9IDA7XG4gICAgYXVkaW8uY3VycmVudC5wbGF5KCk7XG4gIH0sIFtwcm9wcy5sYXVuY2hQbGF5LCBwcm9wcy50cmFja10pO1xuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImF1ZGlvLXBsYXllci1jb250YWluZXJcIj5cbiAgICAgICAgPFBsYXlCdXR0b25cbiAgICAgICAgICBoYW5kbGVQbGF5QnV0dG9uQ2xpY2s9e2hhbmRsZVBsYXlCdXR0b25DbGlja31cbiAgICAgICAgICBwbGF5aW5nU3RhdHVzPXtwbGF5aW5nU3RhdHVzfVxuICAgICAgICAvPlxuICAgICAgICA8UHJvZ3Jlc3NCYXIgYXVkaW89e2F1ZGlvLmN1cnJlbnR9IHByb2dyZXNzaW9uPXtwcm9ncmVzc2lvbn0gLz5cblxuICAgICAgICA8YXVkaW9cbiAgICAgICAgICByZWY9e2F1ZGlvfVxuICAgICAgICAgIG9uVGltZVVwZGF0ZT17dXBkYXRlUHJvZ3Jlc3N9XG4gICAgICAgICAgc3JjPXtwcm9wcy50cmFjay51cmx9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxWb2x1bWVTbGlkZXIgYXVkaW89e2F1ZGlvLmN1cnJlbnR9IC8+XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5hdWRpby1wbGF5ZXItY29udGFpbmVyIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIGhlaWdodDogMnJlbTtcbiAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEF1ZGlvUGxheWVyO1xuIl19 */\\n/*@ sourceURL=/Users/jeremie/web/33_elis/components/AudioPlayer.js */\"));\n}\n\nexport default AudioPlayer;","map":{"version":3,"sources":["/Users/jeremie/web/33_elis/components/AudioPlayer.js"],"names":["useState","useRef","useEffect","PlayButton","ProgressBar","VolumeSlider","AudioPlayer","props","progression","setProgression","playingStatus","setPlayingStatus","audio","updateProgress","current","currentTime","duration","handlePlayButtonClick","play","pause","launchPlay","track","url"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCT,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM;AAAA,OAACU,aAAD;AAAA,OAAgBC;AAAhB,MAAoCX,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAMY,KAAK,GAAGX,MAAM,EAApB;;AACA,QAAMY,cAAc,GAAG,MAAM;AAC3BJ,IAAAA,cAAc,CAAEG,KAAK,CAACE,OAAN,CAAcC,WAAd,GAA4BH,KAAK,CAACE,OAAN,CAAcE,QAA3C,GAAuD,GAAxD,CAAd;AACD,GAFD;;AAGA,QAAMC,qBAAqB,GAAG,MAAM;AAClCN,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD,GAFD;;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,aAAJ,EAAmB;AACjBE,MAAAA,KAAK,CAACE,OAAN,CAAcI,IAAd;AACD,KAFD,MAEO;AACLN,MAAAA,KAAK,CAACE,OAAN,CAAcK,KAAd;AACD;AACF,GANQ,EAMN,CAACT,aAAD,CANM,CAAT,CAX0B,CAmB1B;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAC,IAAAA,KAAK,CAACE,OAAN,CAAcC,WAAd,GAA4B,CAA5B;AACAH,IAAAA,KAAK,CAACE,OAAN,CAAcI,IAAd;AACD,GAJQ,EAIN,CAACX,KAAK,CAACa,UAAP,EAAmBb,KAAK,CAACc,KAAzB,CAJM,CAAT;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,qBAAqB,EAAEJ,qBADzB;AAEE,IAAA,aAAa,EAAEP,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEE,KAAK,CAACE,OAA1B;AAAmC,IAAA,WAAW,EAAEN,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAOE;AACE,IAAA,GAAG,EAAEI,KADP;AAEE,IAAA,YAAY,EAAEC,cAFhB;AAGE,IAAA,GAAG,EAAEN,KAAK,CAACc,KAAN,CAAYC,GAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAcE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEV,KAAK,CAACE,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF;AAAA;AAAA;AAAA,ssFADF;AA0BD;;AAED,eAAeR,WAAf","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport PlayButton from \"./PlayButton\";\nimport ProgressBar from \"./ProgressBar\";\nimport VolumeSlider from \"./VolumeSlider\";\n\nfunction AudioPlayer(props) {\n  const [progression, setProgression] = useState(0);\n  const [playingStatus, setPlayingStatus] = useState(true);\n  const audio = useRef();\n  const updateProgress = () => {\n    setProgression((audio.current.currentTime / audio.current.duration) * 100);\n  };\n  const handlePlayButtonClick = () => {\n    setPlayingStatus(!playingStatus);\n  };\n\n  useEffect(() => {\n    if (playingStatus) {\n      audio.current.play();\n    } else {\n      audio.current.pause();\n    }\n  }, [playingStatus]);\n\n  // allows changing track or rewinding when clicking on the tracklist\n  useEffect(() => {\n    setPlayingStatus(true);\n    audio.current.currentTime = 0;\n    audio.current.play();\n  }, [props.launchPlay, props.track]);\n  return (\n    <div>\n      <div className=\"audio-player-container\">\n        <PlayButton\n          handlePlayButtonClick={handlePlayButtonClick}\n          playingStatus={playingStatus}\n        />\n        <ProgressBar audio={audio.current} progression={progression} />\n\n        <audio\n          ref={audio}\n          onTimeUpdate={updateProgress}\n          src={props.track.url}\n        />\n      </div>\n      <VolumeSlider audio={audio.current} />\n      <style jsx>{`\n        .audio-player-container {\n          display: flex;\n          width: 100%;\n          height: 2rem;\n        }\n        }\n      `}</style>\n    </div>\n  );\n}\n\nexport default AudioPlayer;\n"]},"metadata":{},"sourceType":"module"}